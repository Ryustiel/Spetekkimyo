
feature ccmp {
    script DFLT;
    language dflt required;
    script latn;
    language dflt required;

    # ======================================================== 1 CHOIX

    lookup ETAPE_1_CHOIX {  # Choix forme contextuelle de base

        # Lettre F

        sub [a p] f' by f_high;
        sub [o e] f' by f_low;

        sub f' [a c u] by f_high;
        sub k' [a c u b] by k_high;

        sub f' [o b] by f_low;  # This isnt optimal but it's easier to read
        sub k' [o b] by k_low;

        # Lettre B

        sub [o n f_low] b' by bR;
        sub b' by bL;

        # Lettre U

        sub [n] u' by uL;  # Ignore next letter
        sub u' [a e p o b c y i n] by uR;
        sub u' by uL;
        # Define all other forms of U as codas!

    } ETAPE_1_CHOIX;

    # ======================================================== 2 COMPOSANTS

    lookup ETAPE_2_COMPOSANTS {  # Decoupe tous les caracteres en composants

        # Explicit 2 Parts

        sub a by a_ _a;
        sub o by o_ _o;
        sub e by a_ _e;
        sub p by a_ _p;
        sub y by o_ _y;
        sub c by c_ _c;
        sub s by s_ _s;

        # B

        sub bR by o_ _b;
        sub bL by b_ _o;

    } ETAPE_2_COMPOSANTS;

    # ======================================================== 3 FUSION

    lookup ETAPE_3_FUSION {  # Fusionne les composants des que possible

        # AO OA

        sub _a o_ by _ao_;
        sub _o a_ by _oa_;

        sub _oa_ a_ by _oa_;
        sub _ao_ o_ by _ao_;

        # S

        sub _s a_ by _sa_;
        sub _s b_ by _sb_;
        sub _s c_ by _sc_;

        # K

        sub k s_ by ks_;

        # T

        sub t s_ by ts_;
        sub t a_ by ta_;
        sub t o_ by to_;
        sub t b_ by tb_;
        sub t c_ by tc_;

    } ETAPE_3_FUSION;

    # ======================================================== 4 ACCENTS

    # lookup ETAPE_4_ACCENTS {  # Modifie et positionne les accents
    # } ETAPE_4_ACCENTS;

    # ======================================================== 5 ESTHETIQUE

    lookup ETAPE_5_ESTHETIQUE {  # Applique les formes purement esthétiques

        # HORIZONTAL CONNECTORS

        sub [n f_low] a_' by _na_;
        sub [n f_low] c_' by _nc_;
        sub [n f_high] o_' by _no_;
        sub [_a _p] b_' by _bn_;

        sub _c' [n f_low] by _cn_;
        sub _a' [n f_low] by _an_;
        sub _o' [n f_high] by _on_;

        sub _p' [n f_low] by _pn_;
        sub _e' [n f_low s_] by _en_;
        sub _b' [n f_high] by _bn_;

        # U FORMS

        sub k_high uR' by u_after_high;
        sub [n f_low] uL' by uL_after_hz_high;
        sub [k_high f_high] uL' by uL_after_hz_high;
        sub uR' n by uR_before_hz_high;
        sub uR' f_high by uR_before_hz_high;

        # B ENDING FORMS

        sub [f_low] b_' _o' [a_ o_ s_] by b_; # Ignoring certain combinations
        sub _e' b_' _o' by b_ending;

        # S ENDING FORMS

        sub [_a n f_high] s_' _s' by s_after_high;
        sub [f_low _en_] s_' _s' by s_after_low;

        sub _o' s_' _s' by os_ending;
        sub _c' s_' _s' by cs_ending;
        sub _p' s_' _s' by ps_ending;
        sub _y' s_' _s' by ys_ending;

    } ETAPE_5_ESTHETIQUE;

} ccmp;

feature kern {
    script DFLT;
    language dflt;
    script latn;
    language dflt;

    # MERGE VOYELLE -80

    pos [_a _o] [a_ o_] -80;

    # MERGE VOYELLE S -80

    pos [_s] [o_] -80;
    pos _a s_after_high -80;
    pos [f_low _en_] s_after_low -80;

    pos [n f_high] s_after_high -5;

    # MERGE VOYELLE F N

    pos [_a _o _p _an_ _on_ _cn_ _pn_ _bn_ _en_] [f_high f_low n _bn_] -20;
    pos [f_high f_low n] [a_ o_ _na_ _no_ _nc_] -20;

    # POSITIONNEMENT K T VOYELLE

    pos k_high c_ -40;

    # MERGE K T S

} kern;
