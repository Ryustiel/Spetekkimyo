

table GDEF {
    GlyphClassDef
        [], # Base glyphs
        [], # Ligature glyphs
        [i j h h_ha h_ah i_aj i_ja i_tia], # Mark glyphs
        []; # Component glyphs
} GDEF;

feature ccmp {
    script DFLT;
    language dflt required;
    script latn;
    language dflt required;

    # ======================================================== 1 LETTRES FLOTTANTES

    lookup ETAPE_1_FLOTTANTES {  # Décide si les lettres flottantes doivent devenir des diacritiques ou non

        sub i' [t] by i_it;
        sub i' [s] by i_sia;
        sub [t] i' [a o e p y bL bR uL uR] by i_tia;

        sub [a o e p y bL bR uL uR] i' [a o e p y bL bR uL uR] by i_aj;
        sub i' by i_ia;
        sub j' by i_ja;

        sub h' [a o e p y bL bR uL uR] by h_ha;
        sub [a o e p y bL bR uL uR] h' by h_ah;

        # TODO : Group diacritics together into a group. They will be positioned later depending on the surounding letters.

    } ETAPE_1_FLOTTANTES;

    # ======================================================== 2 CHOIX CONTEXTUEL

    lookup ETAPE_2_CHOIX {  # Choix forme contextuelle de base

        lookupflag IgnoreMarks;

        # Lettre F

        sub [a p] f' by fH;
        sub [o e] f' by fL;

        sub f' [a c u] by fH;
        sub k' [a c u b] by kH;

        sub f' [o b] by fL;  # This isnt optimal but it's easier to read
        sub k' [o b] by kL;

        # Lettre B

        sub [o n fL] b' by bR;
        sub b' by bL;

        # Lettre U

        sub [t s] u' by uR;  # Ignore next letter
        sub [n] u' by uL;  
        sub u' [a e p o b c y n] by uR;
        sub u' [f] [a e p c u n] by uR;
        sub u' by uL;

    } ETAPE_2_CHOIX;

    # ======================================================== 3 COMPOSITION FUSION

    lookup ETAPE_3_COMPOSANTS {  # Decoupe tous les caracteres en composants

        lookupflag IgnoreMarks;

        # Explicit 2 Parts

        sub a by a_ _a;
        sub o by o_ _o;
        sub e by a_ _e;
        sub p by a_ _p;
        sub y by o_ _y;
        sub c by c_ _c;
        sub s by s_ _s;

        # B

        sub bR by o_ _b;
        sub bL by b_ _o;

    } ETAPE_3_COMPOSANTS;

    lookup ETAPE_3_FUSION {  # Fusionne les composants des que possible

        lookupflag IgnoreMarks;

        # AO OA

        sub _a o_ by _ao_;
        sub _o a_ by _oa_;

        sub _oa_ a_ by _oa_;
        sub _ao_ o_ by _ao_;

        # S

        sub _s a_ by _sa_;
        sub _s b_ by _sb_;
        sub _s c_ by _sc_;

        sub _s uR by uR;

        # K

        sub k s_ by ks_;

        # T

        sub t s_ by ts_;
        sub t a_ by ta_;
        sub t o_ by to_;
        sub t b_ by tb_;
        sub t c_ by tc_;

    } ETAPE_3_FUSION;

    # ======================================================== 4 ESTHETIQUE

    lookup ETAPE_4_ESTHETIQUE {  # Applique les formes purement esthétiques

        lookupflag IgnoreMarks;

        # HORIZONTAL CONNECTORS

        sub [n fL] a_' by _na_;
        sub [n fL] c_' by _nc_;
        sub [n fH] o_' by _no_;
        sub [_a _p] b_' by _bn_;

        sub _c' [n fL] by _cn_;
        sub _a' [n fL] by _an_;
        sub _o' [n fH] by _on_;

        sub _p' [n fL] by _pn_;
        sub _e' [n fL s_] by _en_;
        sub _b' [n fH] by _bn_;

        # U FORMS

        sub kH uR' by uR_after_high;
        sub _s uR' by uR_after_high;

        sub n uL' by uL_after_n;
        sub [kH fH] uL' by uL_after_high;

        sub uR' n by uR_before_n;
        sub uR' [fH] by uR_before_high;

        sub t' uR by tuR_;

        # B ENDING FORMS

        sub [fL] b_' _o' [a_ o_ s_] by b_; # Ignoring certain combinations
        sub _e' b_' _o' by b_ending;
        sub _o o_' _b' by b_ending;  # _b implies it is not connected to the next letter
        # TODO : Mix b_ending to bs, bn, bf, bt, bk depending on the consonnant that follows
        # TODO : Ignore b_ending if followed by any other shit

        # S ENDING FORMS

        sub [_a n fH] s_' _s' by s_after_high;
        sub [fL _en_] s_' _s' by s_after_low;

        sub _o' s_' _s' by os_ending;
        sub _c' s_' _s' by cs_ending;
        sub _p' s_' _s' by ps_ending;
        sub _y' s_' _s' by ys_ending;

    } ETAPE_4_ESTHETIQUE;

    # ======================================================== 5 ESTHETIQUE DIACRITIQUE

    lookup ETAPE_5_DESTHETIQUE {  # Applique les formes purement esthétiques aux diacritiques

    sub i_it' by i_it;

    } ETAPE_5_DESTHETIQUE;

    # ======================================================== 6 KERNING

    lookup ETAPE_6_KERNING {

        lookupflag IgnoreMarks;

        # MERGE VOYELLE -80

        pos [_a _o] [a_ o_] -80;
        pos _o b_ending -5;

        # VOYELLE U

        pos tuR_ [uR uR_before_n uR_before_high] -160;
        pos s_ [uR uR_before_n uR_before_high] -120;

        # MERGE VOYELLE S -80

        pos [_s] [o_] -80;
        pos _a s_after_high -80;
        pos [fL _en_] s_after_low -80;

        pos [n fH] s_after_high -5;

        # MERGE VOYELLE F N

        pos [_a _o _p _an_ _on_ _cn_ _pn_ _bn_ _en_] [fH fL n _bn_] -20;
        pos [fH fL n] [a_ o_ _na_ _no_ _nc_] -20;

        # POSITIONNEMENT K T VOYELLE

        pos kH c_ -40;

        # MERGE K T S

    } ETAPE_6_KERNING;

    # ======================================================== 7 DIACRITIC KERNING

    lookup ETAPE_7_DKERNING {

        pos [i_ja] <0 800 0 00>;  # x-advance y-advance x-placement y-placement (placement moves the glyph)

    } ETAPE_7_DKERNING;

    # ======================================================== 7 

} ccmp;
